"use strict";function Tetris(params){params=params||{};const con=$(params.con).first();if(con.length<1)return!1;params.startLevel=void 0===params.startLevel?5:params.startLevel,params.onPrepare=params.onPrepare||function(cbStart){confirm("Начать игру?")&&cbStart()},params.onStopQuestion=params.onStopQuestion||function(cbStop){confirm("Завершить игру?")&&cbStop()},params.onStart=params.onStart||function(){console.log("START")},params.onStop=params.onStop||function(byUser,stat){console.log("STOP",byUser),byUser||alert("Игра звершена")},params.onPause=params.onPause||function(on){console.log("PASUE",on)},params.onStat=params.onStat||function(stat){};const KEY_ESCAPE=27,KEY_SPACEBAR=32,KEY_ARROW_LEFT=37,KEY_ARROW_UP=38,KEY_ARROW_RIGHT=39,KEY_ARROW_DOWN=40,maxColors=6,emptyColor=-1,maxRotations=4,cos=[1,0,-1,0],sin=[0,1,0,-1],field_width=10,field_height=20,fieldPreview_width=4,fieldPreview_height=3,scorePrice=[100,300,700,1500],rowsPerLevel=field_height,levelToSpeed=[1.25,1.4,1.58,1.82,2.15,2.61,3.34,4.62,7.51,10.02,12.02,12.02,12.02,15.05,15.05,15.05,20.03,20.03,20.03,30.05,30.05,30.05,30.05,30.05,30.05,30.05,30.05,30.05,30.05,60.1],figureI={code:"I",x:[0,1,2,3],y:[0,0,0,0],pivot:1},figureJ={code:"J",x:[1,1,1,0],y:[0,1,2,2],pivot:1},figureL={code:"L",x:[0,0,0,1],y:[0,1,2,2],pivot:1},figureO={code:"O",x:[0,1,0,1],y:[0,0,1,1],pivot:-1},figureS={code:"S",x:[2,1,1,0],y:[0,0,1,1],pivot:1},figureZ={code:"Z",x:[0,1,1,2],y:[0,0,1,1],pivot:1},figureT={code:"T",x:[1,0,1,2],y:[0,1,1,1],pivot:2},infoValues={},figuresList=[figureI,figureJ,figureL,figureO,figureS,figureZ,figureT];var loopTimer=null,cellsList=$(""),cellsPreviewList=$("");for(const k in figuresList){const fig=figuresList[k];fig.bounds={x:Math.max.apply(null,fig.x),y:Math.max.apply(null,fig.y)},fig.bounds.max=Math.max(fig.bounds.x,fig.bounds.y)}function pad(num,size){for(num=num.toString();num.length<size;)num="0"+num;return num}function getRandValue(minValue,maxValue){const x=maxValue-minValue,y=Math.floor(Math.random()*x+.5);return y+minValue}function getCellIndex(x,y){return x<0||y<0||x>=field_width||y>=field_height?-1:y*field_width+x}function getPreviewCellIndex(x,y){return x<0||y<0||x>=fieldPreview_width||y>=fieldPreview_height?-1:y*fieldPreview_width+x}function clearField(list=null){(list=list||cellsList).removeClass("on")}function clearPreviewField(){clearField(cellsPreviewList)}function figureToView(fig,x,y,rotate){if(!fig)return;x=Math.floor(x+.5),y=Math.floor(y+.5),rotate=fig.pivot<0?0:rotate%4;const pivot=Math.max(fig.pivot,0),maxVerts=fig.x.length,ox=[],oy=[],px=fig.x[pivot],py=fig.y[pivot],cosa=cos[rotate],sina=sin[rotate];for(var vx,vy,tx,ty,i=0;i<maxVerts;i++)tx=cosa*(vx=fig.x[i]-px)-sina*(vy=fig.y[i]-py)+px+x,ty=sina*vx+cosa*vy+py+y,ox.push(tx),oy.push(ty);return{x:ox,y:oy}}function drawRandom(list=null){var clr=0;(list=list||cellsList).each((function(){var e=$(this);e.attr("data-color",clr),e.addClass("on"),clr=getRandValue(0,5)}))}function drawFigure(fig,clr){clr%=6;const maxVerts=fig.x.length;for(var i=0;i<maxVerts;i++){var idx=getCellIndex(fig.x[i],fig.y[i]);if(idx>=0&&idx<cellsList.length){var e=$(cellsList[idx]);e.attr("data-color",clr),e.addClass("on")}}}function drawPreviewFigure(fig,clr){clr%=6;const maxVerts=fig.x.length;for(var i=0;i<maxVerts;i++){var idx=getPreviewCellIndex(fig.x[i],fig.y[i]);if(idx>=0&&idx<cellsPreviewList.length){var e=$(cellsPreviewList[idx]);e.attr("data-color",clr),e.addClass("on")}}}function drawStatic(dots){const maxVerts=dots.length;for(var i=0;i<maxVerts;i++){var e=$(cellsList[i]),clr=dots[i];clr<0?e.removeClass("on"):(e.attr("data-color",clr),e.addClass("on"))}}function getTimerDelay(level){const maxLevels=levelToSpeed.length,i=Math.min(maxLevels-1,level),speed=levelToSpeed[i],w=1/speed;return 1e3*w}function newGame(){const state={run:!1,pause:!1,startLevel:params.startLevel,figure:null,dots:[],nextColor:0,stat:{timeStart:null,timeLast:null,score:-1,level:-1,rows:-1,figures:-1,tetris:-1},initState:function(){for(var i=field_width*field_height;i--;)this.dots.push(-1)},figureToStatic:function(fig){const maxVerts=fig.x.length;for(var i=0;i<maxVerts;i++){var idx=getCellIndex(fig.x[i],fig.y[i]);idx>=0&&idx<cellsList.length&&(this.dots[idx]=this.color)}},genNewColor:function(){const c=this.nextColor;return this.nextColor=(c+1)%6,c},newFigure:function(){const newColor=this.genNewColor(),newIndex=getRandValue(0,figuresList.length-1),src=figuresList[newIndex];if(!this.figureNext){const newIndex2=getRandValue(0,figuresList.length-1);this.figureNext=figuresList[newIndex2],this.colorNext=this.genNewColor()}this.figure=this.figureNext,this.figureNext=src,this.color=this.colorNext,this.colorNext=newColor,this.rotate=0,this.posX=field_width/2-src.bounds.max/2-1,this.posY=0,this.testBounds()?(this.stat.figures++,this.render()):this.stop()},testBounds:function(fig){if(!(fig=fig||figureToView(this.figure,this.posX,this.posY,this.rotate)))return;const maxVerts=fig.x.length;for(var x,y,idx,i=0;i<maxVerts;i++){if(x=fig.x[i],y=fig.y[i],x<0||x>=field_width)return!1;if(y>=field_height)return!1;if(idx=getCellIndex(x,y),this.dots[idx]>=0)return!1}return!0},replaceRow:function(row){for(var i,j,x=0;x<field_width;x++)i=getCellIndex(x,row),row>0?(j=getCellIndex(x,row-1),this.dots[i]=this.dots[j]):this.dots[i]=-1},removeRow:function(row){for(var y=row;y>=0;y--)this.replaceRow(y)},checkForCollapse:function(removeFilledRow=!0){for(var idx,filledDots,filledRows=0,y=field_height-1;y>=0;y--){filledDots=0;for(var x=0;x<field_width;x++)idx=getCellIndex(x,y),this.dots[idx]>=0&&filledDots++;filledDots==field_width&&(filledRows++,removeFilledRow&&(this.removeRow(y),y++))}return filledRows},render:function(){var fig;(drawStatic(this.dots),this.figure)&&drawFigure(figureToView(this.figure,this.posX,this.posY,this.rotate),this.color)},moveDown:function(draw=!0){const y=this.posY+1;var fig=figureToView(this.figure,this.posX,y,this.rotate);if(this.testBounds(fig))this.posY=y,draw&&this.render();else{fig=figureToView(this.figure,this.posX,this.posY,this.rotate),this.figureToStatic(fig),draw&&this.render(),this.figure=null;const removedRows=this.checkForCollapse(this);if(removedRows>0){const idx=Math.min(removedRows,4)-1;this.stat.score+=scorePrice[idx],this.stat.rows+=removedRows,removedRows>=4&&this.stat.tetris++,this.leftRowsToLevel-=removedRows,this.leftRowsToLevel<1&&(this.leftRowsToLevel=rowsPerLevel,this.stat.level++)}}},moveLeft:function(){const x=this.posX-1,fig=figureToView(this.figure,x,this.posY,this.rotate);this.testBounds(fig)&&(this.posX=x,this.render())},moveRight:function(){const x=this.posX+1,fig=figureToView(this.figure,x,this.posY,this.rotate);this.testBounds(fig)&&(this.posX=x,this.render())},nextRotation:function(){const r=(this.rotate+1)%4,fig=figureToView(this.figure,this.posX,this.posY,r);this.testBounds(fig)&&(this.rotate=r,this.render())},drop:function(){for(var i=0;this.figure;)this.moveDown(!1),i++;i>0&&this.render()},start:function(){this.run=!0,this.pause=!1,this.pauseStart=null,this.pauseDuration=0,this.leftRowsToLevel=rowsPerLevel,this.stat.timeStart=new Date,this.stat.timeLast=this.stat.timeStart,this.stat.level=this.startLevel,this.stat.score=0,this.stat.rows=0,this.stat.figures=0,this.stat.tetris=0,params.onStart.call(this),clearField(),con.addClass("run"),this.showPause(!1),this.nextLoop()},stop:function(byUser=!1){this.run=!1,this.showPause(!1),clearTimeout(loopTimer),con.removeClass("run"),params.onStop.call(this,byUser,this.stat)},togglePause:function(){if(this.pause=!this.pause,this.pause)this.pauseStart=new Date;else{const t=new Date;this.pauseDuration+=t.getTime()-this.pauseStart.getTime()}params.onPause.call(this,this.pause),this.showPause(this.pause)},showPause:function(on){on?con.addClass("paused"):con.removeClass("paused")},nextLoop:function(){if(!this.run)return;if(this.stat.timeLast=new Date,this.pause||(this.figure?this.moveDown():this.newFigure(),this.updateInfo()),!this.run)return;var that=this;const delay=getTimerDelay(this.stat.level);loopTimer=setTimeout((function(){that.nextLoop()}),delay)},updateInfo:function(){const s=this.stat;if(null!=s.timeLast){var diff=s.timeLast.getTime()-s.timeStart.getTime();diff-=this.pauseDuration,s.duration=diff/1e3;const hours=Math.floor(diff/36e5);diff-=36e5*hours;const mins=Math.floor(diff/6e4);diff-=6e4*mins;const seconds=Math.floor(diff/1e3);infoValues.time.html(pad(hours,2)+":"+pad(mins,2)+":"+pad(seconds,2))}else infoValues.time.html("--:--:--");infoValues.level.html(s.level<0?"--":s.level),infoValues.score.html(s.score<0?"--":s.score),infoValues.rows.html((s.rows<0?"--":s.rows)+" / "+(this.leftRowsToLevel||"--")),infoValues.figures.html(s.figures<0?"--":s.figures),infoValues.tetris.html(s.tetris<0?"--":s.tetris),params.onStat.call(this,this.stat),clearPreviewField(),drawPreviewFigure(this.figureNext,this.colorNext)}};return state.initState(),state}function buildCellsArray(container,width,height){for(var row=0;row<height;row++)for(var col=0;col<width;col++){var cell=$('<div class="cell" data-color="" data-row="'+row+'" data-col="'+col+'" data-index="'+(row*width+col)+'"></div>');container.append(cell)}}return{version:"1.0",init:function(){con.html(""),con.addClass("tetris");const infoPanel=$('<div class="info"></div>');infoPanel.append('<div class="title">Тетрис</div>');const preview=$('<div class="figure"><div class="cells"></div></div>');buildCellsArray(preview.find(".cells"),fieldPreview_width,fieldPreview_height),cellsPreviewList=preview.find(".cell"),infoPanel.append(preview),infoPanel.append('<div class="time"><span class="text">Время</span><span class="value">00:00:00</span></div>'),infoPanel.append('<div class="level"><span class="text">Уровень</span><span class="value">--</span></div>'),infoPanel.append('<div class="sum-score"><span class="text">Очки</span><span class="value">--</span></div>'),infoPanel.append('<div class="sum-tetris"><span class="text">Тетрисы</span><span class="value">--</span></div>'),infoPanel.append('<div class="sum-rows"><span class="text">Ряды</span><span class="value">--</span></div>'),infoPanel.append('<div class="sum-figures"><span class="text">Фигуры</span><span class="value">--</span></div>'),infoPanel.append('<div class="other"></div>'),infoPanel.append('<div class="help"><h4>управление</h4><div class="item"><span class="key">&uarr;</span>поворот</div><div class="item"><span class="key">&larr;</span>влево</div><div class="item"><span class="key">&rarr;</span>вправо</div><div class="item"><span class="key">&darr;</span>сброс</div><div class="item"><span class="key">space</span>пауза</div><div class="item"><span class="key">esc</span>завершить</div><div class="item text">для начала или завершения игры <u>кликните</u></div></div>'),con.append(infoPanel),infoValues.time=infoPanel.find(".time > .value"),infoValues.level=infoPanel.find(".level > .value"),infoValues.score=infoPanel.find(".sum-score > .value"),infoValues.tetris=infoPanel.find(".sum-tetris > .value"),infoValues.rows=infoPanel.find(".sum-rows > .value"),infoValues.figures=infoPanel.find(".sum-figures > .value");const f=$('<div class="field"></div>');buildCellsArray(f,field_width,field_height),cellsList=f.find(".cell"),con.append(f),con.append('<div class="pauseModal"><div class="pauseCon">Пауза</div></div>');var gameState=null;function requireStart(){params.onPrepare((function(){(gameState=newGame()).start()}))}function requireStop(){params.onStopQuestion((function(){gameState.stop(!0),gameState=null}))}function updateContainerSize(){const h=con.height(),w=Math.floor(h/1);con.css("width",w+"px")}$(document).keydown((function(e){if(gameState&&gameState.run){switch(e.which){case 37:if(gameState.pause)return;gameState.moveLeft();break;case 39:if(gameState.pause)return;gameState.moveRight();break;default:return}e.preventDefault()}})),$(document).keyup((function(e){if(gameState&&gameState.run){switch(e.which){case 38:if(gameState.pause)return;gameState.nextRotation();break;case 40:if(gameState.pause)return;gameState.drop();break;case 27:if(!gameState.pause){requireStop();break}case 32:gameState.togglePause();break;default:return}e.preventDefault()}})),$(window).resize((function(){updateContainerSize()})),setTimeout((function(){updateContainerSize()}),50),drawRandom(),drawRandom(cellsPreviewList),con.click((function(){gameState&&gameState.run?requireStop():requireStart()}))}}}